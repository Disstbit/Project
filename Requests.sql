--1	Вывести информацию о мероприятиях цена которых меньше 1000 рублей.
Use ToursCities_945
select *
from Мероприятие
where [Стоимость билета]<1000

--2 Вывести информацию о поездках, в которые едут автобусы с регзнаками Е584НР62 и С454НР62 
select *
from Поездка
where [Рег. знак автобуса] = 'Е584НР62' or [Рег. знак автобуса] = 'С454НР62'

--3 Вывести информацию о поездках, в котор едут автобусы с регзнакоми Е584НР62 и С454НР62, с ценой больше 800 и при этом отправляются от 'Окский пр., 35, Рязань'
select *
from Поездка
where ([Стоимость поездки]>800 and ([Рег. знак автобуса] = 'Е584НР62' or [Рег. знак автобуса] = 'С454НР62')) and [Место отъезда]= 'Окский пр., 35, Рязань'

--4 Вывести информацию о мероприятиях с указанием стоимости в $
select Исполнитель, Город, Площадка, [Дата мероприятия], ([Стоимость билета]/73) as [Стоимость в $]
from Мероприятие

--4 Вывести суммарную стоимость поездки на мероприятие, цена которых меньше 2000.
select Исполнитель, [Стоимость билета], [Стоимость поездки], ([Стоимость билета]+[Стоимость поездки]) AS 'Суммарная стоимость'
from Мероприятие INEER JOIN Поездка ON [ID мероприятия]=Мероприятие
where [Стоимость билета] + [Стоимость поездки] < 2000

--5 Вывести информацию о исполнителях ‘БИ-2’ и ‘Кино’.
select *
from Мероприятие
where Исполнитель IN ('БИ-2','Кино')

--6 Вывести о информацию о поездках цена которых в диапазоне от 800 до 1000 рублей.
select *
from Поездка 
where [Стоимость поездки] BETWEEN 1200 and 1500

--7 Вывести информацию о мероприятии, когда имя исполнителя начинается с буквы 'Б'
select *
from Мероприятие
where Исполнитель like 'Б%'

--8 Вывести всех участников, у которых не указан номер телефона
select ФИО
from Участники
where Телефон is null

--2 запросы на теоретико-мн
--9 Вывести исполнителя цена на концерт, которого меньше 1000 рублей или концерт пройдет весной.
use ToursCities_945
select Исполнитель 
from Мероприятие
where [Стоимость билета]<1000
union
select Исполнитель 
from Мероприятие
where MONTH([Дата мероприятия]) between 3 and 5


--10 Вывести номер поездки, в которую едут автобусы с регзнаком Е584НР62 и С454НР62.
select Мероприятие
from Поездка
where [Рег. знак автобуса] = 'Е584НР62'
intersect 
select Мероприятие
from Поездка
where [Рег. знак автобуса] = 'С454НР62'

--11 Вывести информацию номера участников, которые не забронировали места. 
select [ID участника] 
from Участники
except
select Участник
from Бронь

--12 Вывести информацию 5 ближайщих поездках, указав: исполнителя, город, дату отправления автобуса, рег знак автобуса.
select top 5 Исполнитель, Город, [Д.В. отъезда], [Рег. знак автобуса]
from Мероприятие, Поездка
where Мероприятие.[ID мероприятия]=Поездка.Мероприятие
order by [Д.В. отъезда] asc



--13 Вывести информацию о исполнителе, на концерт которго едут автобус регзнаком Е584НР62 
use ToursCities_945
select Исполнитель, [Д.В. отъезда], [Рег. знак автобуса]
from Мероприятие JOIN Поездка ON Мероприятие.[ID мероприятия]=Поездка.Мероприятие
where [Рег. знак автобуса]= 'Е584НР62'

--14 Вывести мероприятия на которые едут автобусы вместимостью > 30 и забронированно мест > 20
use ToursCities_945
select Исполнитель, [Рег. знак автобуса]
from Мероприятие JOIN Поездка ON Мероприятие.[ID мероприятия]=Поездка.Мероприятие JOIN Бронь ON Бронь.Поездка=Поездка.[ID поездка] 
where [Вместимость автобуса]>30 and [Кол-во мест]>20

--15 Вывести всю информацию из БД о участниках, которым нет необходимости похупать билет на концерт.
select *
from Поездка INNER JOIN Бронь ON Поездка.[ID поездка]=Бронь.Поездка INNER JOIN Участники ON Участники.[ID участника]=Бронь.Участник INNER JOIN Мероприятие ON Мероприятие.[ID мероприятия]=Поездка.Мероприятие
where [Необходимость покупки билета]= 'False'


--16 Вывести ФИО и информацию о количестве забронированных мест.
select ФИО, sum([Кол-во мест]) AS [Количество забронированных мест]
from Участники left join Бронь On Участники.[ID участника]=Бронь.Участник
group by ФИО

--17 Вывести весь список номеров поездок с указанием номеров участников, которые сделали бронирование
select Участник,[ID поездка]
from Бронь right join Поездка On Бронь.Поездка=Поездка.[ID поездка]



--18 Вывести информацию о количестве автобусов, которые едут на мероприятие с номером 7.
select COUNT(*) as [Кол-во автобусов]
from Поездка
where Мероприятие=7

--19 Вывести ФИО участников с указанием количества забронированных ими мест.
select ФИО, sum([Кол-во мест]) AS [Кол-во забронированных мест]
from Участники INNER JOIN Бронь ON [ID участника]=Участник
group by ФИО

--20.1 Вывести мероприяти, которые пройдут 1 по 10 день месяца 
select *
from Мероприятие
where DAY([Дата мероприятия]) between 1 and 10


--20.2 Вывести мероприятия, которые пройдут весной.
select *
from Мероприятие
where MONTH([Дата мероприятия]) between 3 and 5

--20.3 Вывести информацию о поездках, которые пройдут в 2020 году
select *
from Мероприятие
where YEAR([Дата мероприятия])='2020'

--21 Вывести информацию о количестве автбусов, которые едут на пероприятие
select Мероприятие, COUNT([Рег. знак автобуса]) AS [Кол-во автобусов]
from Поездка
Group by Мероприятие

--22 Вывести количество забронированных мест у участников, которым не надо покупать билеты на мероприятие.
select Участник, SUM([Кол-во мест]) AS [Кол-во забронированных мест], [Необходимость покупки билета]
from Бронь
where [Необходимость покупки билета]='False'
group by Участник, [Необходимость покупки билета]


--23 Вывести информацию о участниках, которые забронировали больше 25 мест.
select ФИО, sum([Кол-во мест]) AS [Кол-во забронированных мест]
from Участники INNER JOIN Бронь ON [ID участника]=Участник
group by ФИО
Having sum([Кол-во мест])>20

--24 Вывести информацию о мероприятих, с указанием количества мест в порядке убывания.
select Мероприятие,[Рег. знак автобуса], ([Вместимость автобуса]) 
from Поездка
order by [Вместимость автобуса] desc


--4 Запросы на модификацию таблиц
--25 Занести нового участника в таблицу.
insert into Участники values
('Михайлов Никита Алексеевич','+7(920)632-84-74')

--26
Use ToursCities_945
create table [Дорогие мероприятия]
	(Исполнитель char(30) NOT NULL,
	Город char(30) NOT NULL,
	Площадка char(30) NOT NULL,
	[Дата мероприятия] datetime NOT NULL,
	[Стоимость билета] money NOT NULL check ([Стоимость билета]>0),
	constraint PK_ИсполнительДата primary key (Исполнитель,[Дата мероприятия]))
GO
insert into [Дорогие мероприятия]
select Исполнитель, Город, Площадка, [Дата мероприятия], [Стоимость билета]
from Мероприятие
where [Стоимость билета] > 3000


--27 Увеличить цену поездок на 10%
update Поездка
set [Стоимость поездки]= [Стоимость поездки]*1.1

--28 Обновить номер телефона Тихонова.
update Участники
set Телефон= '+7(800)555-35-35'
where [ID участника]=1

--29 Запрос на удаление существующих данных
delete 
from Участники 

--30 Удалить бронирование Тихонова.
delete
from Бронь
where Участник in (select [ID участника]
					from Участники
					where ФИО = 'Тихонов Алексей Владимирович')

--31 Удалить информацию о Михайлове из БД.
delete from Участники 
where [ID участника]=11

--32 Удалить поездки на мероприятие номер 1.
delete
from Поездка
where Мероприятие in (select [ID мероприятия]
					from Мероприятие
					where [ID мероприятия] = 1)

--33.1 Вывести мероприятия, стоимость которых меньше средней стоимости. 
select *
from Мероприятие
where [Стоимость билета]< (select avg([Стоимость билета])
								from Мероприятие)

--33.2 Вывести мероприятие, которое состоится раньше всех.
select *
from Мероприятие
where [Дата мероприятия]= (select min([Дата мероприятия])
								from Мероприятие)

--33.3 Определить номера участников, которые забронировали мест больше, чем учасник номер 2 
select Участник
from Бронь
group by Участник
having sum([Кол-во мест])>(select sum([Кол-во мест])
								from Бронь
								where Участник=2)

--34 Оределить исполнителей на концерты которых едут автобусы.
select Исполнитель
from Мероприятие
where [ID мероприятия]= ANY(select Мероприятие
						from Поездка)

--35 Вывести участника с максимальным количеством забронированных мест.
select Участник, sum([Кол-во мест]) AS [Кол-во мест]
from Бронь
group by Участник
having sum([Кол-во мест])>= ALL(select sum([Кол-во мест])
								from бронь 
								group by Участник)

--36 Вывести ФИО участника с бронированием на самую большую стоимость.
Select ФИО 
from Поездка INNER JOIN Бронь ON Поездка.[ID поездка]=Бронь.Поездка INNER JOIN Участники ON Участники.[ID участника]=Бронь.Участник
where ([Стоимость поездки]*[Кол-во мест]) in ( select max([Стоимость поездки]*[Кол-во мест])
													from Поездка INNER JOIN Бронь ON Поездка.[ID поездка]=Бронь.Поездка)

--37
select ФИО
from Участники
where EXISTS (select *
				from Бронь
				Where Бронь.Участник=Участники.[ID участника])

--38 Вывести ФИО участника с бронированием на самую минимальную цену, при этом у него есть необходимость в покупке билет на мероприятие.
Select ФИО, [Кол-во мест],([Стоимость поездки]*[Кол-во мест]) AS [Цена бронирования]
from Поездка INNER JOIN Бронь ON Поездка.[ID поездка]=Бронь.Поездка INNER JOIN Участники ON Участники.[ID участника]=Бронь.Участник
where ([Стоимость поездки]*[Кол-во мест]) in ( select min([Стоимость поездки]*[Кол-во мест])
													from Поездка INNER JOIN Бронь ON Поездка.[ID поездка]=Бронь.Поездка
													where Участник in(select Участник
																		from Бронь
																		where [Необходимость покупки билета]='True'))

--39 Вывести исполнителя на концерт, которого едет автобус с регзнаком Е584НР62, при это этом количество забронированных мест меньше 20 и об участнике имеется контактная информация.
select Исполнитель
from Мероприятие
where [ID мероприятия] in (select Мероприятие
							from Поездка
							where [Рег. знак автобуса]='Е584НР62' and [ID поездка] in (select Поездка
																						from Бронь
																						where [Кол-во мест]<20 and Участник in(select [ID участника]
																																from Участники
																																where Телефон is not null)))


--40 Запрос на добавление нового столбца в таблице

AlTER TABLE Мероприятие 
ADD [Стоимость мероприятия в $] money
go
update Мероприятие
set [Стоимость мероприятия в $] = [Стоимость билета]/73


--41 Запрос на добавление нового ограничения к таблице.
ALTER TABLE Участники
ADD CONSTRAINT ФИО_UNIQUE UNIQUE(ФИО)

--42 Запрос на удаление нового столбца из таблицы
AlTER TABLE Мероприятие 
DROP COLUMN [Стоимость мероприятия в $]

--43 Запрос на удаление нового ограничения из таблицы.
ALTER TABLE Участники
DROP CONSTRAINT ФИО_UNIQUE

--44 Запрос на изменение типа данных в таблице 
ALTER TABLE Мероприятие
ALTER COLUMN Площадка nvarchar(50) 

--45 Запрос на добавление нового первичного ключа к таблице с сохранением целостности таблицы
alter table [Дорогие мероприятия]
add [Номер мероприятия] int identity(1,1) not null
go
alter table [Дорогие мероприятия]
drop constraint PK_ИсполнительДата
go
alter table [Дорогие мероприятия]
add constraint PK_НомерМероприятия primary key ([Номер мероприятия])
go
alter table [Дорогие мероприятия]
add constraint UN_ДорогиеМероприятия unique (Исполнитель, [Дата мероприятия])





